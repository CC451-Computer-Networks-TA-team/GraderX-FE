{"version":3,"sources":["api-client.js","components/grader/LabSelector.js","components/grader/CourseSelector.js","components/grader/submissions/ImportSubmissions.js","components/grader/submissions/FileUpload.js","components/grader/submissions/GetSubmissions.js","components/grader/Status.js","components/grader/DownloadResult.js","components/grader/submissions/CodeEditor.js","components/grader/submissions/SingleSubmission.js","components/grader/submissions/Revision.js","components/grader/ResultsContainer.js","components/layout/AppHeader.js","components/grader/Grader.js","pages/lab/TestCaseForm.js","pages/lab/LabForm.js","pages/lab/Labs.js","pages/Courses.js","pages/markdown/Markdown.js","App.js","index.js"],"names":["getImportMethod","sheetLink","url","require","parse","hostname","GRADERX_API","process","course","lab","axios","get","onlySTDOUT","couseName","delete","oldCourseName","put","post","formData","lab_id","runtime","internet","test_cases","name","runtime_limit","disable_internet","labId","responseType","accessToken","method","field","student","submissionId","fileName","LabSelector","props","useState","labs","setLabs","useEffect","apiClient","then","res","labs_array","labs_objects","forEach","push","key","text","value","createLabObjects","data","map","Fragment","className","style","paddingTop","height","Dropdown","id","titleText","label","onChange","setLab","handleChange","selectedItem","itemToString","item","items","courses","setCourse","ImportSubmissions","setAccessToken","setSheetLink","disableContinue","setDisableContinue","disableSheetInput","setDisableSheetInput","validSheet","setValidSheet","warningText","setWarningText","authorized","setAuthorized","optionsVisibity","setOptionsVisibility","sheetFields","setSheetFields","selectedField","setSelectedField","length","catch","err","response","fields","fieldsArray","fieldsObjects","createFieldsObjects","msg","finally","display","alignItems","clientId","scope","render","renderProps","onClick","backgroundColor","width","paddingLeft","Icon","onSuccess","authSuccessful","onFailure","cookiePolicy","authCallback","authResponseWithAccessToken","buttonTheme","graphScopes","TextInput","labelText","disabled","invalid","type","invalidText","e","target","onFieldsChange","Button","importAndGrade","FileUpload","selectedInvalid","setSelectedInvalid","fileInputRef","React","createRef","renderIcon","Upload16","current","click","ref","hidden","event","extension","files","includes","setFile","accept","GetSubmissions","resetLab","Link","href","Status","minHeight","textAlign","status","toLowerCase","Loader","size","content","charAt","toUpperCase","slice","active","Header","as","icon","color","Subheader","cursor","resetFile","marginRight","DownloadResult","kind","Download32","fileDownload","CodeEditor","openModal","setOpenModal","MultiRef","itemRefs","tabRefs","tabLabels","currentTab","setCurrentTab","subList","currentTabLabel","setCurrentTabLabel","submissionFiles","getLanguageMode","lang","substr","lastIndexOf","saveFiles","modifySubmissions","FormData","append","Blob","getFiles","regrade","setTabLabel","theLabel","index","editor","getValue","file_content","setValue","Modal","hasForm","open","onRequestClose","primaryButtonText","secondaryButtonText","onRequestSubmit","modalHeading","Tabs","light","onSelectionChange","sub_id","Tab","mode","theme","minLines","maxLines","newValue","Edit16","SingleSubmission","submissionFileList","setSubmissionFileList","visible","setVisible","AccordionItem","title","diff","failed","resp","tc_id","leftTitle","rightTitle","oldValue","expected","output","useDarkTheme","Revision","fileNameList","setFileNameList","setDiff","update","setUpdate","setRegrade","setRegradeStatus","val","error","console","log","Accordion","align","marginBottom","Reset32","float","ResultsContainer","margin","paddingBottom","Tile","AppHeader","aria-label","prefix","to","link","Grader","file","setStatus","importing","setImporting","changeLab","changeCourse","changeFile","f","uploadFile","CourseSelector","TestCaseForm","disableID","setDisableID","isEdit","setIsEdit","formTestcaseID","setFormTestcaseID","formTestcaseIN","setFormTestcaseIN","formTestcaseOUT","setFormTestcaseOUT","formStudentAccessible","setFormStudentAccessible","resetAndCloseTCModal","closeTCModal","testCase","input","isTCModalOpen","editTestcase","addTestcase","modalLabel","Grid","padding","Row","Column","TextArea","cols","placeholder","rows","marginTop","Checkbox","checked","LabForm","setIsTCModalOpen","testcaseToEdit","setTestCaseToEdit","formLabId","setFormLabId","formRuntime","setFormRuntime","formInternet","setFormInternet","formTestcases","setFormTestcases","formLabGuide","setFormLabGuide","resetAndCloseLabModal","closeLabModal","labData","testcasesClone","public","filter","test_case","editLab","JSON","stringify","addLab","FileUploader","buttonLabel","labelTitle","labelDescription","filenameStatus","hasIconOnly","iconDescription","Delete16","deleteTestcase","Add16","Table","DataTable","TableBody","TableCell","TableContainer","TableHead","TableHeader","TableRow","TableToolbar","TableToolbarContent","TableToolbarSearch","LabsPage","didMount","setDidMount","labsLoaded","setLabsLoaded","courseIds","setCourseIds","courseIdsLoaded","setCourseIdsLoaded","selectedCourse","setSelectedCourse","labToEdit","setLabToEdit","fetchLabs","course_name","_arr","createLabsObjects","courses_array","courses_ids","createCoursesIds","alert","marginLeft","Select","course_id","SelectItem","headers","header","onInputChange","row","cells","cell","labID","labWithLabID","find","openEditLab","lab_name","DataTableSkeleton","showHeader","CoursesPage","setCourses","coursesLoaded","setCoursesLoaded","formTitle","setFormTitle","fromCourseName","setFormCourseName","formCourseLang","setFormCourseLang","setOldCourseName","createCoursesObjects","courses_objects","temp","variant","_res","rest","toString","helperText","courseName","MarkdownPage","match","params","LabName","markdown","setMarkdown","resultsReady","setResultsReady","totalTestcases","setTotalTestcases","resultsContainerRef","useRef","lab_guide","scrollIntoView","plugins","gfm","total_test_cases_count","tc","App","path","component","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.77eaf49f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nfunction getImportMethod(sheetLink) {\n\n  var parse = require('url-parse')\n    , url = parse(sheetLink, true);\n  if (url.hostname === \"alexuuni-my.sharepoint.com\") {\n    return \"import-ms\"\n\n  } else if (url.hostname === \"docs.google.com\") {\n    return \"import-google\"\n\n  }\n\n\n}\nconst GRADERX_API = process.env.GRADERX_API\n  ? process.env.GRADERX_API\n  : \"http://localhost:5000/\";\n\nexport default {\n  getLabMD(course, lab) {\n    return axios.get(`${GRADERX_API}courses/${course}/labs/${lab}/lab_guide`)\n  },\n\n  getLabs(course) {\n    return axios.get(`${GRADERX_API}courses/${course}/labs`);\n  },\n\n  getCourses(onlySTDOUT = false) {\n    return axios.get(`${GRADERX_API}courses${onlySTDOUT ? '?STDOUT' : ''}`);\n  },\n\n  getCourseEdit(couseName) {\n    return axios.get(`${GRADERX_API}courses/${couseName}/edit`);\n  },\n\n  deleteCourse(couseName) {\n    return axios.delete(`${GRADERX_API}courses/${couseName}`);\n  },\n\n  updateCourse(course, oldCourseName) {\n    return axios.put(`${GRADERX_API}courses/${oldCourseName}`, course);\n  },\n\n  addCourse(course) {\n    return axios.post(`${GRADERX_API}course`, course);\n  },\n  addLab(course, formData) {\n    return axios.post(`${GRADERX_API}courses/${course}/labs`, formData)\n  },\n  editLab(course, lab_id, runtime, internet, test_cases) {\n    return axios.put(`${GRADERX_API}courses/${course}/labs/${lab_id}`, { name: lab_id, runtime_limit: runtime, disable_internet: !internet, test_cases })\n  },\n  deleteLab(course, lab) {\n    return axios.delete(`${GRADERX_API}courses/${course}/labs/${lab}`)\n  },\n\n  uploadSubmissions(course, labId, formData) {\n    return axios.post(`${GRADERX_API}submissions?course=${course}&lab=${labId}&method=file`, formData);\n  },\n\n  downloadResults(course, labId) {\n    return axios.get(`${GRADERX_API}results?course=${course}&lab=${labId}&type=download`, {\n      responseType: 'blob',\n    });\n  },\n\n  validateSheet(accessToken, sheetLink) {\n\n\n\n    return axios.post(`${GRADERX_API}submissions/validate`, {\n      accessToken: accessToken,\n      sheetLink: sheetLink,\n      method: getImportMethod(sheetLink)\n\n    })\n  },\n\n  startImporting(accessToken, sheetLink, field, course, lab) {\n    const method = getImportMethod(sheetLink)\n\n    return axios.post(`${GRADERX_API}submissions?course=${course}&lab=${lab}&method=${method}&field=${field}`, {\n      accessToken: accessToken,\n      sheetLink: sheetLink\n    })\n  },\n\n  startGrading(course, lab, student=false) {\n    return axios.get(`${GRADERX_API}run_grader?course=${course}&lab=${lab}${student? \"&student\": \"\"}`)\n  },\n\n  getDiffResults(course, lab) {\n    return axios.get(`${GRADERX_API}results?course=${course}&lab=${lab}&type=diff`)\n  },\n\n\n  modifySubmissions(course, lab, submissionId, formData) {\n    return axios.put(`${GRADERX_API}submissions?course=${course}&lab=${lab}&submission_id=${submissionId}`,\n      formData);\n  },\n\n  getFilesList(course, lab, submissionId) {\n    return axios.get(`${GRADERX_API}submissions?course=${course}&lab=${lab}&submission_id=${submissionId}`)\n  },\n\n  getFile(course, lab, submissionId, fileName) {\n    return axios.get(`${GRADERX_API}submission_file?course=${course}&lab=${lab}&submission_id=${submissionId}&file_name=${fileName}`)\n  },\n\n  getSubmissionFilesList(course, lab) {\n    return axios.get(`${GRADERX_API}/submissions?course=${course}&lab=${lab}`)\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport apiClient from \"../../api-client\";\nimport '../styles.scss';\n\nimport {\n  Dropdown\n} from 'carbon-components-react';\n\nfunction LabSelector(props) {\n  const [labs, setLabs] = useState([]);\n\n  const createLabObjects = labs_array => {\n    let labs_objects = [];\n    labs_array.forEach(lab => {\n      labs_objects.push({ key: lab, text: lab, value: lab });\n    });\n    setLabs(labs_objects);\n  };\n\n  useEffect(() => {\n    apiClient.getLabs(props.course).then(res => {\n      createLabObjects(res.data.labs.map(lab => lab.name));\n    });\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = (data) => {\n    props.setLab(data.value);\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"moss-container\">\n        <div style={{ paddingTop: 50 }}>\n          <h1>Select Lab</h1>\n          <div style={{ height: 32 }}></div>\n          <Dropdown\n            id=\"courseDropdown\"\n            titleText=\"Select Course\"\n            label=\"Select\"\n            onChange={(data) => {\n              handleChange(data.selectedItem);\n            }}\n            itemToString={(item) => (item ? item.text : '')}\n            items={labs}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default LabSelector;\n","import React, { useState, useEffect } from \"react\";\nimport apiClient from \"../../api-client\";\nimport '../styles.scss';\n\n\n\nimport {\n    Dropdown\n} from 'carbon-components-react';\n\nfunction LabSelector(props) {\n    const [labs, setLabs] = useState([]);\n\n    const createLabObjects = labs_array => {\n        let labs_objects = [];\n        labs_array.forEach(lab => {\n            labs_objects.push({ key: lab, text: lab, value: lab });\n        });\n        setLabs(labs_objects);\n    };\n\n    useEffect(() => {\n        apiClient.getCourses().then(res => {\n            createLabObjects(res.data.courses.map((course => course.name)));\n        });\n    }, []);\n\n    const handleChange = (data) => {\n        props.setCourse(data.value);\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"moss-container\">\n                <div style={{ paddingTop: 50 }}>\n                    <h1>Select Course</h1>\n                    <div style={{ height: 32 }}></div>\n                    <Dropdown\n                        id=\"courseDropdown\"\n                        titleText=\"Select Course\"\n                        label=\"Select\"\n                        onChange={(data) => {\n                            handleChange(data.selectedItem);\n                        }}\n                        itemToString={(item) => (item ? item.text : '')}\n                        items={labs}\n                    />\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default LabSelector;\n","import React, { useState, useEffect } from 'react'\nimport GoogleLogin from 'react-google-login';\nimport { Icon } from \"semantic-ui-react\";\nimport apiClient from \"../../../api-client\"\nimport MicrosoftLogin from \"react-microsoft-login\";\nimport '../../styles.scss'\n\nimport { Button, TextInput, Dropdown } from 'carbon-components-react';\n\nconst ImportSubmissions = (props) => {\n    const [accessToken, setAccessToken] = useState(\"\")\n    const [sheetLink, setSheetLink] = useState(\"\")\n    const [disableContinue, setDisableContinue] = useState(true)\n    const [disableSheetInput, setDisableSheetInput] = useState(false)\n    const [validSheet, setValidSheet] = useState(true)\n    const [warningText, setWarningText] = useState(\"\")\n    const [authorized, setAuthorized] = useState(false)\n    const [optionsVisibity, setOptionsVisibility] = useState(true)\n    const [sheetFields, setSheetFields] = useState([])\n    const [selectedField, setSelectedField] = useState(\"\")\n    const MS_CLIENT_ID = \"21adf918-a9cb-41af-8a1c-f8e4866a8107\"\n\n    const authSuccessful = (response) => {\n        setAccessToken(response.accessToken)\n        setOptionsVisibility(false)\n    }\n\n\n    const authHandler = (err, data) => {\n        setAccessToken(data.authResponseWithAccessToken.accessToken);\n        setOptionsVisibility(false);\n        setAuthorized(true);\n    };\n\n    const createFieldsObjects = fieldsArray => {\n        let fieldsObjects = [];\n        fieldsArray.forEach(field => {\n            fieldsObjects.push({ key: field, text: field, value: field });\n        });\n        setSheetFields(fieldsObjects);\n    };\n\n\n    useEffect(() => {\n        if (sheetLink.length > 0) {\n            setDisableSheetInput(true)\n            apiClient.validateSheet(accessToken, sheetLink)\n                .then((res) => {\n                    setSheetFields([])\n                    setValidSheet(true)\n                    setDisableContinue(false)\n                })\n                .catch((err) => {\n                    setValidSheet(false)\n                    setDisableContinue(true)\n                    if (err.response) {\n                        if (err.response.data.fields) {\n                            createFieldsObjects(err.response.data.fields)\n                            setWarningText(err.response.data.msg + \"<br>Please select the form field that represents submissions\")\n                        } else {\n                            setSheetFields([])\n                            setWarningText(err.response.data)\n                        }\n                    }\n                })\n                .finally(() => {\n                    setDisableSheetInput(false)\n                })\n        }\n        // eslint-disable-next-line\n    }, [sheetLink])\n\n    const onFieldsChange = (data) => {\n        setDisableContinue(false)\n        setValidSheet(true)\n        setSelectedField(data.value)\n    }\n\n\n    return (\n        <React.Fragment >\n            <div style={optionsVisibity ? {} : { display: 'none' }}>\n                <div>\n                    <p>Import From:</p>\n                    <div style={{ height: 16 }}></div>\n                </div>\n                <div style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                }}>\n                    <div style={{ display: \"inline-block\" }}>\n                        <GoogleLogin\n                            clientId=\"653543257974-p3uuv08hcftdhkolqpl2hpbbta2d1ck2.apps.googleusercontent.com\"\n                            scope=\"https://www.googleapis.com/auth/spreadsheets.readonly https://www.googleapis.com/auth/drive.readonly\"\n                            render={renderProps => (\n                                <div\n                                    id=\"googlebutton\"\n                                    onClick={renderProps.onClick}\n                                    style={{\n                                        backgroundColor: \"#4285F4\",\n                                        height: 40,\n                                        width: 104,\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                        paddingLeft: 16,\n                                    }}\n                                >\n                                    <div style={{ display: \"inline-block\" }}><Icon name='google' /></div>\n                                    <p style={{ display: \"inline-block\" }}>Sign in</p>\n                                </div>\n                            )}\n                            onSuccess={(response) => {\n                                authSuccessful(response);\n                                setAuthorized(true);\n                            }}\n                            onFailure={err => { }}\n                            cookiePolicy={'single_host_origin'}\n                        />\n                    </div>\n                    <div\n                        style={{ height: 40, width: 104, display: \"inline-block\" }}\n                    ><MicrosoftLogin\n                            clientId={MS_CLIENT_ID}\n                            authCallback={authHandler}\n                            buttonTheme=\"dark_short\"\n                            graphScopes={[\"user.read\", \"Files.Read.All\"]}\n                        />\n                    </div>\n                </div>\n\n\n            </div>\n\n            <div style={authorized ? {} : { display: 'none' }}>\n                <p>Enter the spreadsheet link:</p>\n                <div style={{ height: 16 }}></div>\n                <TextInput\n                    id='spreadsheetLinkField'\n                    labelText='Spreadsheet Link'\n                    disabled={disableSheetInput}\n                    value={sheetLink}\n                    invalid={!validSheet}\n                    type='text'\n                    invalidText={warningText}\n\n                    onChange={(e) => setSheetLink(e.target.value)}\n                />\n\n\n\n                {\n                    sheetFields.length > 0 ?\n                        <div>\n                            <div style={{ height: 16 }}></div>\n                            <Dropdown\n                                id=\"fieldsDropdown\"\n                                titleText=\"Select Field\"\n                                label=\"Select\"\n                                onChange={(data) => {\n                                    onFieldsChange(data.selectedItem);\n                                }}\n                                itemToString={(item) => (item ? item.text : '')}\n                                items={sheetFields}\n                            />\n                        </div>\n\n\n                        : <div></div>\n                }\n\n                <div style={{ height: 16 }}></div>\n                <Button\n                    disabled={disableContinue}\n                    onClick={() => props.importAndGrade(accessToken, sheetLink, selectedField)}\n                >\n                    Continue\n                        </Button>\n\n            </div>\n        </React.Fragment>\n    )\n}\n\n\nexport default ImportSubmissions\n","import React, { useState } from \"react\";\nimport { Button } from 'carbon-components-react';\nimport { Upload16 } from '@carbon/icons-react';\n\nexport function validateExtension(extension) {\n  const supportedTypes = [\n    \"application/zip\",\n    \"application/vnd.rar\",\n    \"application/x-7z-compressed\"\n  ];\n  return supportedTypes.includes(extension);\n}\n\n\n\nfunction FileUpload(props) {\n  const [selectedInvalid, setSelectedInvalid] = useState(false);\n  const fileInputRef = React.createRef();\n\n  function onFileChange(event) {\n    if (\n      event.target.files[0] &&\n      validateExtension(event.target.files[0].type)\n    ) {\n      props.setFile(event.target.files[0]);\n    } else {\n      setSelectedInvalid(true);\n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      <p> Only .rar / .7z / .zip files. 500mb max file size </p>\n      <div style={{ height: 16 }}></div>\n      <Button renderIcon={Upload16} onClick={() => fileInputRef.current.click()}>Select file</Button>\n      {selectedInvalid ? (\n        <div>\n          <div style={{ height: 16 }}></div>\n          <p>Supported files: .rar / .7z / .zip</p>\n        </div>\n      ) : null}\n      {/* a hidden input is created because semantic ui does not have a file upload component by default\n            a normal button is created that triggers a hidden file input when the button is clicked */}\n      <input\n        ref={fileInputRef}\n        name=\"submissions_file\"\n        type=\"file\"\n        hidden\n        onChange={onFileChange}\n        accept=\".zip,.rar,.7zip,.tar\"\n      />\n    </React.Fragment>\n  );\n}\n\nexport default FileUpload;\n","import React from \"react\";\nimport ImportSubmissions from './ImportSubmissions'\nimport FileUpload from \"./FileUpload\";\nimport '../../styles.scss';\n\nimport { Link } from 'carbon-components-react';\n\nconst GetSubmissions = (props) => {\n  return (\n    <React.Fragment>\n      <div className=\"moss-container\">\n        <div style={{ paddingTop: 50 }}>\n          <h3>Import Submissions</h3>\n          <div style={{ height: 24 }}></div>\n          <FileUpload setFile={props.setFile} resetLab={props.resetLab} />\n          <div style={{ height: 24 }}></div>\n          <div className=\"separator\">\n            <div className=\"left\"></div>\n            <div className=\"sep-word\"><b>OR</b></div>\n            <div className=\"right\"></div>\n          </div>\n          <div style={{ height: 16 }}></div>\n          <ImportSubmissions importAndGrade={props.importAndGrade} />\n          <div style={{ height: 16 }}></div>\n          <Link href=\"#\" onClick={props.resetLab}>Select another lab</Link>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default GetSubmissions\n","import React from \"react\";\nimport { Loader, Header, Icon } from \"semantic-ui-react\";\n\nfunction Status(props) {\n  return (\n    <React.Fragment>\n      <div style={{ minHeight: \"8em\", textAlign: \"center\" }}>\n        {props.status.toLowerCase() === \"grading\" ? (\n          <Loader\n            size=\"large\"\n            content={\n              props.status.charAt(0).toUpperCase() +\n              props.status.slice(1).toLowerCase() +\n              \"...\"\n            }\n            active\n          />\n        ) : (\n            <React.Fragment>\n              <Header as=\"h2\" icon textAlign=\"center\">\n                <Icon name=\"x\" color=\"red\" />\n              Grading Failed\n              <Header.Subheader>\n                  Please make sure the compressed file is not broken.\n              </Header.Subheader>\n              </Header>\n              <Header as=\"h5\" textAlign=\"center\">\n                <a\n                  href={() => false}\n                  style={{ cursor: \"pointer\" }}\n                  onClick={props.resetFile}\n                >\n                  <Icon name=\"chevron left\" style={{ marginRight: \".4em\" }} />\n                Select another file\n              </a>\n              </Header>\n            </React.Fragment>\n          )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Status;\n","import React from \"react\";\nimport fileDownload from \"js-file-download\";\nimport apiClient from \"../../api-client\";\nimport { Download32 } from '@carbon/icons-react';\nimport { Button } from 'carbon-components-react';\n\nfunction DownloadResult(props) {\n  function downloadFile() {\n    apiClient.downloadResults(props.course, props.lab).then(res => {\n      fileDownload(res.data, \"results.zip\");\n    });\n  }\n\n  return (\n    <React.Fragment>     \n      <Button kind=\"primary\" renderIcon={Download32}\n        onClick={downloadFile}>\n        DOWNLOAD\n        </Button>\n    </React.Fragment>\n  );\n}\n\nexport default DownloadResult;\n","import React, { useState, useEffect } from 'react';\nimport MultiRef from 'react-multi-ref';\nimport { Tabs, Tab } from 'carbon-components-react';\nimport AceEditor from \"react-ace\";\nimport { Modal, Button } from 'carbon-components-react';\nimport { Edit16 } from '@carbon/icons-react';\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-sql\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-json\";\n\nimport \"ace-builds/src-noconflict/theme-dracula\";\n// import 'ace-builds/src-min-noconflict/ext-searchbox';\nimport apiClient from \"../../../api-client\";\nimport './CodeEditor.scss'\n\nfunction CodeEditor(props) {\n    const [openModal, setOpenModal] = useState(false);\n    const [itemRefs] = useState(() => new MultiRef());\n    const [tabRefs] = useState(() => new MultiRef());\n    // eslint-disable-next-line\n    const [tabLabels, setTabLabels] = useState([])\n    const [currentTab, setCurrentTab] = useState(0)\n    const [currentTabLabel, setCurrentTabLabel] = useState(props.subList[0])\n    // eslint-disable-next-line\n    const [submissionFiles, setSubmissionFiles] = useState({})\n\n\n    useEffect(() => {\n        if (isEmpty()) {\n            getSubmissionFile();\n        }\n        // eslint-disable-next-line\n    }, [currentTab])\n\n\n    function getLanguageMode(lang) {\n        var ext = lang.substr(lang.lastIndexOf('.') + 1);\n        switch (ext) {\n            case 'py':\n                return 'python';\n            case 'c':\n            case 'cc':\n            case 'h':\n            case 'hpp':\n            case 'cpp':\n                return 'c_cpp';\n            case 'java':\n                return 'java';\n            case 'js':\n                return 'javascript';\n            case 'json':\n                return 'json';\n            case 'sql':\n                return 'sql';\n            default:\n                return 'json';\n        }\n    }\n\n\n    function isEmpty() {\n        return itemRefs.map.get(currentTab).editor.getValue() === ''\n    }\n\n    function setEditor(editor, value) {\n        editor.setValue(value)\n    }\n\n    function handleSelect(index) {\n        setCurrentTab(index)\n        setCurrentTabLabel(tabLabels[index])\n    }\n\n    function getFiles() {\n        const formData = new FormData();\n        for (let key in submissionFiles) {\n            formData.append(key, new Blob([submissionFiles[key]], {\n                type: \"text/plain\",\n            }))\n        }\n\n        return formData\n    }\n\n    function getSubmissionFile() {\n        apiClient\n            .getFile(props.course, props.lab, props.submissionId, currentTabLabel)\n            .then(res => {\n                setEditor(itemRefs.map.get(currentTab).editor, res.data.file_content);\n            })\n    }\n\n\n    function modifySubmissions(formData) {\n        apiClient\n            .modifySubmissions(props.course, props.lab, props.submissionId, formData)\n    }\n\n    function saveFiles() {\n        if (submissionFiles) {\n            const formData = getFiles();\n            modifySubmissions(formData);\n        }\n\n        // for regrading\n        apiClient.startGrading(props.course, props.lab)\n        props.regrade(true)\n        return true\n    }\n\n\n    function setTabLabel(theLabel, index) {\n        tabLabels[index] = theLabel\n        return theLabel\n    }\n\n    return (\n        <div>\n            <Modal\n                hasForm\n                open={openModal}\n                onRequestClose={() => {\n                    setOpenModal(false);\n                }}\n                primaryButtonText='Save'\n                secondaryButtonText='Close'\n                onRequestSubmit={() => {\n                    saveFiles();\n                    setOpenModal(false);\n                }}\n                size='lg'\n                modalHeading=\"Edit Mode\"\n            >\n                <div>\n                    <Tabs light\n                        label=\"Files\"\n                        onSelectionChange={handleSelect}\n                    >\n\n                        {props.subList.map((sub_id, index) => (\n\n                            <Tab\n                                href=\"#\"\n                                id={index}\n                                label={setTabLabel(sub_id, index)}\n                                ref={tabRefs.ref(index)}\n                            >\n                                <AceEditor\n                                    mode={getLanguageMode(sub_id)}\n                                    theme=\"dracula\"\n                                    name=\"UNIQUE_ID_OF_DIV\"\n                                    minLines=\"5\"\n                                    maxLines=\"30\"\n                                    ref={itemRefs.ref(index)}\n                                    style={{ width: \"100%\" }}\n                                    onChange={(newValue) => {\n                                        submissionFiles[sub_id] = newValue;\n                                    }}\n                                />\n                            </Tab>\n\n                        ))}\n                    </Tabs>\n                </div>\n            </Modal>\n            <Button renderIcon={Edit16} onClick={() => setOpenModal(true)}>\n                Edit Submission\n            </Button>\n        </div>\n    )\n\n}\n\nexport default CodeEditor;","import React, { useEffect, useState } from \"react\";\nimport apiClient from \"../../../api-client\";\nimport CodeEditor from \"./CodeEditor\"\nimport ReactDiffViewer from \"react-diff-viewer\";\nimport { AccordionItem } from \"carbon-components-react\";\n\n\n\n\nfunction SingleSubmission(props) {\n\n    const [submissionFileList, setSubmissionFileList] = useState();\n    const [visible, setVisible] = useState(false);\n\n    function getFilesListForSubmission() {\n        apiClient\n            .getFilesList(props.course, props.lab, props.submissionId)\n            .then(res => {\n                setSubmissionFileList(res.data)\n            })\n    }\n\n    useEffect(() => {\n        getFilesListForSubmission()\n        // eslint-disable-next-line\n    }, [])\n\n\n    useEffect(() => {\n        if (submissionFileList)\n            setVisible(true)\n\n    }, [submissionFileList, setSubmissionFileList])\n\n    return (\n\n        <AccordionItem\n            title={props.submissionId} >\n\n            <div>\n                {\n                    props.diff &&\n                    props.diff[props.index].failed.map((resp) => (\n                        <div key={resp.tc_id} >\n                            <h4>Test Case {resp.tc_id}</h4>\n                            <hr></hr>\n                            <ReactDiffViewer\n                                leftTitle=\"Expected\"\n                                rightTitle=\"Output\"\n                                oldValue={resp.expected}\n                                newValue={resp.output}\n                                useDarkTheme={true}\n                                className=\"single-diff-container\"\n                            />\n                            <br></br>\n                        </div>\n                    ))\n\n                }\n\n                {visible &&\n                    <CodeEditor\n                        subList={submissionFileList}\n                        course={props.course}\n                        lab={props.lab}\n                        submissionId={props.submissionId}\n                        regrade = {props.regrade}\n                    />\n                }\n\n            </div>\n\n\n\n\n\n        </AccordionItem>\n\n    )\n\n\n\n\n}\n\nexport default SingleSubmission;\n","import React, { useEffect, useState } from \"react\";\nimport { Accordion, Button } from \"carbon-components-react\";\nimport apiClient from \"../../../api-client\";\nimport SingleSubmission from \"./SingleSubmission\"\nimport { Reset32 } from '@carbon/icons-react';\nimport './Revision.scss'\n\nfunction Revision(props) {\n\n    const [fileNameList, setFileNameList] = useState();\n    const [visible, setVisible] = useState(false);\n    const [diff, setDiff] = useState();\n    const [update, setUpdate] = useState(0)\n    const [regrade, setRegrade] = useState(false)\n\n    useEffect(() => {\n        getSubmissionFilesList()\n        getDiffResults();\n        // eslint-disable-next-line\n    }, [update])\n\n\n    useEffect(() => {\n        if (fileNameList) {\n            setVisible(true)\n        }\n\n    }, [fileNameList, setFileNameList])\n\n\n    function setRegradeStatus(val) {\n\n        setRegrade(val);\n    }\n\n\n    function getSubmissionFilesList() {\n        apiClient.getSubmissionFilesList(props.course, props.lab)\n            .then(res => {\n                setFileNameList(res.data)\n            });\n    }\n\n\n    function getDiffResults() {\n\n        apiClient.getDiffResults(props.course, props.lab)\n            .then(res => {\n                if (res) {\n                    setDiff(res.data.diff)\n                } else {\n                    setDiff(false)\n                }\n            })\n            .catch(function (error) { console.log(error) });\n\n    }\n\n    function regradeSubmissions() {\n        setUpdate(update => ++update);\n    }\n\n\n\n    return (\n        <div>\n            {visible &&\n                <Accordion align=\"start\"\n                    style={{ marginBottom: \"10px\" }}>\n                    {\n                        fileNameList.map((item, index) => (\n                            <div>\n                                <SingleSubmission\n                                    course={props.course}\n                                    lab={props.lab}\n                                    submissionId={item}\n                                    diff={diff}\n                                    index={index}\n                                    regrade={setRegradeStatus}\n                                />\n\n                            </div>\n                        ))\n                    }\n\n                </Accordion>}\n            {\n                        <Button kind=\"secondary\"\n                            renderIcon={Reset32}\n                            onClick={regradeSubmissions}\n                            disabled={(!regrade)}\n                            style={{ float: \"left\" }}>REGRADE AND SHOW RESULTS </Button>\n\n\n            }\n\n        </div>\n    )\n}\n\nexport default Revision;\n","import React, { useEffect, useState } from \"react\";\nimport DownloadResult from \"./DownloadResult\";\nimport Revision from \"./submissions/Revision\"\nimport apiClient from \"../../api-client\";\nimport { Tile, Link } from 'carbon-components-react';\n\nfunction ResultsContainer(props) {\n  // eslint-disable-next-line\n  const [fileNameList, setFileNameList] = useState();\n\n  useEffect(() => {\n    apiClient.getSubmissionFilesList(props.course, props.lab)\n      .then(res => {\n        setFileNameList(res.data)\n      })\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <React.Fragment>\n\n      <div\n        className=\"bx--grid\"\n        style={{\n          width: \"50%\",\n          paddingTop: \"20%\",\n          margin: \"auto\"\n        }}\n      >\n\n        <div style={{ paddingBottom: \"0.5rem\" }}>\n\n          <Tile style={{ color: \"White\" }}>\n            <h4> Grading Results</h4>\n          </Tile>\n\n          <Revision\n            course={props.course}\n            lab={props.lab}\n          />\n          \n          <DownloadResult course={props.course} lab={props.lab} resetLab={props.resetLab} />\n        </div>\n\n        <Link href=\"#\"\n          onClick={props.resetLab}> {\"< \"}Select another lab</Link>\n\n      </div>\n\n    </React.Fragment>\n  );\n}\n\nexport default ResultsContainer;\n","import React from \"react\";\nimport {NavLink} from 'react-router-dom'\n\nimport {\n  Header,\n  HeaderName,\n  HeaderNavigation,\n  //HeaderMenuItem,\n} from \"carbon-components-react/lib/components/UIShell\";\n\nfunction AppHeader() {\n  const links = [\n    { key: 0, to: \"/courses\", text: \"Courses\" },\n    { key: 1, to: \"/labs\", text: \"Labs\" },\n    { key: 2, to: \"/grader\", text: \"Grader\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <Header aria-label=\"Alexandria University - GraderX\">\n        <HeaderName href=\"#\" prefix=\"Alexandria University\">\n          Grader-X\n        </HeaderName>\n        <HeaderNavigation aria-label=\"Alexandria University - GraderX\">\n          {links.map((link) => (\n            <NavLink key={link.key} className=\"bx--header__menu-item\" to={link.to}>{link.text}</NavLink>\n          ))}          \n        </HeaderNavigation>\n      </Header>\n    </React.Fragment>\n  );\n}\n\nexport default AppHeader;\n","import React, { useState, useEffect } from \"react\";\nimport LabSelector from \"./LabSelector\";\nimport CourseSelector from './CourseSelector'\nimport GetSubmissions from './submissions/GetSubmissions'\nimport Status from \"./Status\";\nimport apiClient from \"../../api-client\";\nimport ResultsContainer from \"./ResultsContainer\"\nimport AppHeader from \"../../components/layout/AppHeader\";\nfunction Grader() {\n  const [course, setCourse] = useState(\"\")\n  const [lab, setLab] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const [importing, setImporting] = useState(false);\n\n  function changeLab(val) {\n    setLab(val);\n  }\n\n  function changeCourse(val) {\n    setCourse(val);\n  }\n\n  const changeFile = f => {\n    setStatus(\"grading\");\n    setFile(f);\n  };\n\n  const resetLab = () => {\n    setLab(\"\");\n    setFile(null);\n    setImporting(false)\n    setStatus(\"\");\n  };\n\n  const resetFile = () => {\n    setFile(null);\n    setImporting(false)\n    setStatus(\"\");\n  };\n\n  const uploadFile = () => {\n    const formData = new FormData();\n    formData.append(\"submissions_file\", file);\n    apiClient\n      .uploadSubmissions(course, lab, formData)\n      .then(res => {\n        apiClient.startGrading(course, lab)\n          .then(res => {\n            setStatus(\"\");\n          }).catch(err => {\n            setStatus(\"failed\");\n          })\n\n      })\n      .catch(err => {\n        setStatus(\"failed\");\n      });\n  };\n\n\n  useEffect(() => {\n    if (file) {\n      uploadFile();\n    }\n    // eslint-disable-next-line\n  }, [file]);\n\n  const importAndGrade = (accessToken, sheetLink, field) => {\n    setStatus(\"grading\")\n    setImporting(\"true\")\n    apiClient.startImporting(accessToken, sheetLink, field, course, lab)\n      .then((res) => {\n        apiClient.startGrading(course, lab)\n          .then(res => {\n            setStatus(\"\")\n          }).catch(err => {\n            setStatus(\"failed\");\n          })\n\n      })\n\n\n\n\n\n  }\n\n  const determineVisible = () => {\n    if (!course) {\n      return <CourseSelector setCourse={changeCourse} />\n    } else if (!lab) {\n      return <LabSelector setLab={changeLab} course={course} />;\n    } else if (!importing && !file) {\n      return <GetSubmissions setFile={changeFile} resetLab={resetLab} importAndGrade={importAndGrade} />;\n    } else if (status) {\n      return <Status status={status} resetFile={resetFile} />;\n    } else {\n      return (<div>\n        <ResultsContainer course={course} lab={lab} resetLab={resetLab} />\n      </div>\n      )\n\n    }\n  };\n\n  return (\n    <div>\n      <AppHeader />\n      {determineVisible()}\n    </div>\n  );\n}\n\nexport default Grader;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  TextInput,\n  Grid,\n  Row,\n  Column,\n  TextArea,\n  Checkbox\n} from \"carbon-components-react\";\n\nconst TestCaseForm = (props) => {\n  const [disableID, setDisableID] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [formTestcaseID, setFormTestcaseID] = useState(\"\");\n  const [formTestcaseIN, setFormTestcaseIN] = useState(\"\");\n  const [formTestcaseOUT, setFormTestcaseOUT] = useState(\"\");\n  const [formStudentAccessible, setFormStudentAccessible] = useState(false)\n\n  const addTestcase = () => {\n    if (formTestcaseID && formTestcaseIN && formTestcaseOUT) {\n      props.addTestcase(formTestcaseID, formTestcaseIN, formTestcaseOUT, formStudentAccessible);\n      resetAndCloseTCModal()\n    }\n  };\n\n  const editTestcase = () => {\n    if (formTestcaseID && formTestcaseIN && formTestcaseOUT) {\n      props.editTestcase(formTestcaseID, formTestcaseIN, formTestcaseOUT);\n      resetAndCloseTCModal()\n    }\n  };\n\n  const resetAndCloseTCModal = () =>{\n    setFormTestcaseID(\"\");\n    setFormTestcaseIN(\"\");\n    setFormTestcaseOUT(\"\");\n    setFormStudentAccessible(false);\n    setDisableID(false);\n    setIsEdit(false);\n    props.closeTCModal()\n  }\n\n  useEffect(() => {\n    if (props.testCase) {\n      setFormTestcaseID(props.testCase.id);\n      setFormTestcaseIN(props.testCase.input);\n      setFormTestcaseOUT(props.testCase.output);\n      setDisableID(true);\n      setIsEdit(true);\n    }\n  // eslint-disable-next-line\n  }, [props.isTCModalOpen]);\n\n  return (\n    <Modal\n      hasForm\n      open={props.isTCModalOpen}\n      onRequestClose={() => {\n        resetAndCloseTCModal();\n      }}\n      onRequestSubmit={() => {\n        isEdit ? editTestcase() : addTestcase();\n      }}\n      primaryButtonText=\"Save\"\n      secondaryButtonText=\"Close\"\n      size=\"sm\"\n      modalHeading=\"Test Case\"\n      modalLabel={isEdit ? \"Edit\" : \"Add\"}\n    >\n      <Grid style={{ padding: \"0\" }}>\n        <TextInput\n          id=\"my_input\"\n          labelText=\"ID\"\n          value={formTestcaseID}\n          disabled={disableID}\n          onChange={(e) => setFormTestcaseID(e.target.value)}\n        />\n        <div style={{ height: 24 }}></div>\n        <Row>\n          <Column>\n            <TextArea\n              cols={50}\n              id=\"test2\"\n              invalidText=\"A valid value is required\"\n              labelText=\"Test Case Input\"\n              placeholder={`10\\n10`}\n              rows={4}\n              value={formTestcaseIN}\n              onChange={(e) => setFormTestcaseIN(e.target.value)}\n            />\n          </Column>\n          <Column>\n            <TextArea\n              cols={50}\n              id=\"test2\"\n              invalidText=\"A valid value is required\"\n              labelText=\"Test Case Output\"\n              placeholder=\"20\"\n              rows={4}\n              value={formTestcaseOUT}\n              onChange={(e) => setFormTestcaseOUT(e.target.value)}\n            />\n          </Column>\n        </Row>\n        <Row style={{ marginTop: \"1rem\" }}>\n          <Column>\n            <Checkbox\n              labelText={`Visible To Students`}\n              id=\"test-case-privacy\"\n              checked={formStudentAccessible}\n              onChange={(e) => setFormStudentAccessible(e)}\n            />\n          </Column>\n        </Row>\n      </Grid>\n    </Modal>\n  );\n};\n\nexport default TestCaseForm;\n","import React, { useState, useEffect } from \"react\";\nimport TestCaseForm from \"./TestCaseForm\";\nimport {\n  Button,\n  Modal,\n  TextInput,\n  Grid,\n  Row,\n  Column,\n  Checkbox,\n  FileUploader\n} from \"carbon-components-react\";\nimport { Delete16, Edit16, Add16 } from \"@carbon/icons-react\";\n\nconst LabForm = (props) => {\n  const [isTCModalOpen, setIsTCModalOpen] = useState(false);\n  const [disableID, setDisableID] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [testcaseToEdit, setTestCaseToEdit] = useState(null);\n  const [formLabId, setFormLabId] = useState(\"\");\n  const [formRuntime, setFormRuntime] = useState(\"\");\n  const [formInternet, setFormInternet] = useState(false);\n  const [formTestcases, setFormTestcases] = useState([]);\n  const [formLabGuide, setFormLabGuide] = useState(null)\n\n\n  const addLab = () => {\n    if(formLabId && formRuntime){\n        const formData = new FormData();\n        formData.append('name', formLabId)\n        formData.append('runtime_limit', formRuntime)\n        formData.append('disable_internet', !formInternet)\n        formData.append('test_cases', JSON.stringify(formTestcases))\n        formData.append('lab_guide', formLabGuide)\n\n        props.addLab(formData);\n        props.closeLabModal();\n        resetAndCloseLabModal()\n    }\n  }\n\n  const editLab = () => {\n    if(formLabId && formRuntime){\n        props.editLab(formLabId, formRuntime, formInternet, formTestcases);\n        props.closeLabModal();\n        resetAndCloseLabModal()\n    }\n  }\n\n  const resetAndCloseLabModal = () => {\n    setFormLabId(\"\");\n    setFormRuntime(\"\");\n    setFormInternet(false);\n    setFormTestcases([]);\n    setFormLabGuide(null);\n    setDisableID(false);\n    setIsEdit(false);\n    props.closeLabModal()\n  };\n\n  const openEditTestcase = (testCase) => {\n    setTestCaseToEdit(testCase);\n    props.closeLabModal();\n    setIsTCModalOpen(true);\n  };\n\n  const closeTCModal = () => {\n    setIsTCModalOpen(false);\n    props.setOpenModal(true);\n    setTestCaseToEdit(null);\n  };\n\n  const addTestcase = (formTestcaseID, formTestcaseIN, formTestcaseOUT, formStudentAccessible) => {\n    let testcasesClone = formTestcases.slice(0);\n    testcasesClone.push({\n      id: formTestcaseID,\n      input: formTestcaseIN,\n      output: formTestcaseOUT,\n      public: formStudentAccessible\n    });\n    setFormTestcases(testcasesClone);\n    closeTCModal();\n  };\n\n  const editTestcase = (formTestcaseID, formTestcaseIN, formTestcaseOUT) => {\n    let testcasesClone = formTestcases.slice(0);\n    testcasesClone = testcasesClone.filter(\n      (test_case) => test_case.id !== formTestcaseID\n    );\n    testcasesClone.push({\n      id: formTestcaseID,\n      input: formTestcaseIN,\n      output: formTestcaseOUT,\n    });\n    setFormTestcases(testcasesClone);\n    closeTCModal();\n  };\n\n  const deleteTestcase = (id) => {\n    let testcasesClone = formTestcases.slice(0);\n    setFormTestcases(testcasesClone.filter((test_case) => test_case.id !== id));\n  };\n\n  useEffect(() => {\n    if (props.labData) {\n        setFormLabId(props.labData.name);\n        setFormRuntime(props.labData.runtime_limit);\n        setFormInternet(!props.labData.disable_internet);\n        setFormTestcases(props.labData.test_cases);\n        setDisableID(true);\n        setIsEdit(true);\n    }\n  // eslint-disable-next-line\n  }, [props.openModal]);\n\n  const labGuideHandler = (e) => {\n    setFormLabGuide(e.target.files[0])\n  }\n\n  return (\n    <React.Fragment>\n      <TestCaseForm\n        addTestcase={addTestcase}\n        editTestcase={editTestcase}\n        testCase={testcaseToEdit}\n        isTCModalOpen={isTCModalOpen}\n        setIsTCModalOpen={setIsTCModalOpen}\n        closeTCModal={closeTCModal}\n      />\n      <Modal\n        hasForm\n        open={props.openModal}\n        onRequestClose={() => {\n          resetAndCloseLabModal();\n        }}\n        primaryButtonText=\"Save\"\n        secondaryButtonText=\"Close\"\n        onRequestSubmit={() => {\n          isEdit ? editLab() : addLab();\n        }}\n        size=\"sm\"\n        modalHeading=\"Lab\"\n        modalLabel={isEdit ? \"Edit\" : \"Add\"}\n      >\n        <Grid style={{ padding: \"0\" }}>\n          <Row>\n            <Column>\n              <TextInput\n                labelText=\"Name\"\n                value={formLabId}\n                onChange={(e) => setFormLabId(e.target.value)}\n                disabled={disableID}\n              />\n            </Column>\n            <Column>\n              <TextInput\n                labelText=\"Runtime Limit (Seconds)\"\n                value={formRuntime}\n                onChange={(e) => setFormRuntime(e.target.value)}\n                type=\"number\"\n              />\n            </Column>\n          </Row>\n          <Row style={{ marginTop: \"1rem\" }}>\n            <Column>\n              <Checkbox\n                labelText={`Enable Internet Access`}\n                id=\"checkbox-label-1\"\n                checked={formInternet}\n                onChange={(e) => setFormInternet(e)}\n              />\n            </Column>\n          </Row>\n          <Row style={{ marginTop: \"2rem\" }}>\n            <Column>\n              <FileUploader buttonLabel=\"Select file\" labelTitle=\"Upload Lab Guide (optional)\" labelDescription=\"only .md files\" filenameStatus='complete' onChange={labGuideHandler}/>\n            </Column>\n          </Row>\n          <Row style={{ marginTop: \"2rem\" }}>\n            <Column>\n              {/* <FileUploader\n                buttonLabel=\"Add file\"\n                labelTitle=\"Test Cases\"\n                labelDescription=\"Only .json files, 500kb max file size.\" /> */}\n              <div className=\"test-cases-container\">\n                {formTestcases.map((test_case) => (\n                  <Row key={test_case.id} className=\"container\">\n                    <p className=\"column-1\" style={{ display: \"inline-block\" }}>\n                      {test_case.id}\n                    </p>\n\n                    <div\n                      className=\"column-2\"\n                      style={{ display: \"inline-block\" }}\n                    >\n                      <Button\n                        kind=\"ghost\"\n                        size=\"small\"\n                        hasIconOnly\n                        renderIcon={Edit16}\n                        iconDescription=\"Edit\"\n                        onClick={() => openEditTestcase(test_case)}\n                      ></Button>\n                      <Button\n                        kind=\"ghost\"\n                        size=\"small\"\n                        hasIconOnly\n                        renderIcon={Delete16}\n                        iconDescription=\"Delete\"\n                        onClick={() => deleteTestcase(test_case.id)}\n                      ></Button>\n                    </div>\n                  </Row>\n                ))}\n              </div>\n\n              <Button\n                renderIcon={Add16}\n                onClick={() => {\n                  props.closeLabModal();\n                  setIsTCModalOpen(true);\n                }}\n              >\n                Add test case\n              </Button>\n            </Column>\n          </Row>\n        </Grid>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default LabForm;\n","import React, { useState, useEffect } from \"react\";\nimport apiClient from \"../../api-client\";\nimport LabForm from \"./LabForm\";\nimport \"./styles.scss\";\nimport AppHeader from \"../../components/layout/AppHeader\";\nimport {\n  //Link,\n  DataTable,\n  DataTableSkeleton,\n  Button,\n  SelectSkeleton,\n  Select,\n  SelectItem,\n} from \"carbon-components-react\";\nimport { Delete16, Edit16, Add16 } from \"@carbon/icons-react\";\nconst {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableHeader,\n  TableRow,\n  TableToolbar,\n  TableToolbarContent,\n  TableToolbarSearch,\n} = DataTable;\n\nfunction LabsPage() {\n  const [didMount, setDidMount] = useState(false)\n  const [labs, setLabs] = useState([]);\n  const [labsLoaded, setLabsLoaded] = useState(false)\n  const [courseIds, setCourseIds] = useState([]);\n  const [courseIdsLoaded, setCourseIdsLoaded] = useState(false)\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n  const [labToEdit, setLabToEdit] = useState(null)\n\n  const createLabsObjects = (labs_array) => {\n    let labs_objects = [];\n\n    labs_array.forEach((lab, index, _arr) => {\n      lab.id = `${index}`;\n      labs_objects.push(lab);\n    });\n\n    setLabs(labs_objects);\n  };\n\n  useEffect(() => {\n    if (didMount) {\n      setLabsLoaded(true)\n    }\n  // eslint-disable-next-line\n  }, [labs])\n\n  useEffect(() => {\n    if (didMount) {\n      setCourseIdsLoaded(true)\n    }\n  // eslint-disable-next-line\n  }, [courseIds])\n\n  const createCoursesIds = (courses_array) => {\n    let courses_ids = [];\n    courses_array.forEach((course, index, _arr) => {\n      courses_ids.push(course.name);\n    });\n    setCourseIds(courses_ids);\n  };\n\n  const fetchLabs = (course_name) => {\n    setLabsLoaded(false)\n    apiClient.getLabs(course_name).then((res) => {\n      createLabsObjects(res.data.labs);\n      setSelectedCourse(course_name);\n    })\n  };\n\n  const changeLabs = (event) => {\n    const course_name = event.target.value;\n    fetchLabs(course_name);\n  };\n\n  useEffect(() => {\n    setDidMount(true)\n    apiClient.getCourses(true).then((res) => {\n      createCoursesIds(res.data.courses);\n      fetchLabs(res.data.courses[0].name)\n      setSelectedCourse(res.data.courses[0].name);\n    })\n  // eslint-disable-next-line\n  }, []);\n\n  const addLab = (formData) => {\n    apiClient\n      .addLab(\n        selectedCourse,\n        formData\n      )\n      .then((res) => {\n        fetchLabs(selectedCourse);\n      })\n      .catch((error) => {\n        alert(error.response.data.status);\n      });\n  };\n\n\n  const editLab = (formLabId, formRuntime, formInternet, formTestcases) => {\n    apiClient\n      .editLab(\n        selectedCourse,\n        formLabId,\n        formRuntime,\n        formInternet,\n        formTestcases\n      )\n      .then((res) => {\n        fetchLabs(selectedCourse);\n      })\n      .catch((error) => {\n        alert(error.response.data.status);\n      });\n  };\n\n  const deleteLab = (lab_name) => {\n    apiClient.deleteLab(selectedCourse, lab_name).then((res) => {\n      fetchLabs(selectedCourse);\n    });\n  };\n\n  const openEditLab = (labID) => {\n    let labWithLabID = labs.find(lab => lab.name === labID)\n    setLabToEdit(labWithLabID)\n    setOpenModal(true)\n  }\n\n  const closeLabModal = () => {\n    setOpenModal(false)\n    setLabToEdit(null)\n  }\n\n\n  return (\n    <div>\n      <AppHeader />\n      <LabForm\n        addLab={addLab}\n        editLab={editLab}\n        openModal={openModal}\n        setOpenModal={setOpenModal}\n        closeLabModal={closeLabModal}\n        labData={labToEdit}\n      />\n      <div style={{ marginLeft: 16, marginTop: 64, marginRight: 16 }}>\n        <div style={{ height: 16 }}></div>\n        <h1>Browse Labs</h1>\n        <div style={{ height: 40 }}></div>\n        {\n          courseIdsLoaded ?\n            (\n              <Select id=\"select-1\" labelText=\"Select Course\" onChange={changeLabs}>\n                {courseIds.map((course_id) => (\n                  <SelectItem key={course_id} value={course_id} text={course_id} />\n                ))}\n              </Select>\n            ) :\n            (\n              <SelectSkeleton style={{ width: 224 }} />\n            )\n        }\n        <div style={{ height: 56 }}></div>\n        {\n          labsLoaded ?\n            (\n              <DataTable\n                rows={labs}\n                headers={[\n                  {\n                    key: \"id\",\n                    header: \"Id\",\n                  },\n                  {\n                    key: \"name\",\n                    header: \"Name\",\n                  },\n                  {\n                    key: \"disable_internet\",\n                    header: \"Internet\",\n                  },\n                  {\n                    key: \"runtime_limit\",\n                    header: \"Runtime Limit\",\n                  },\n                  {\n                    key: \"actions\",\n                    header: \"Actions\",\n                  },\n                ]}\n                render={({ rows, headers, onInputChange }) => (\n                  <TableContainer>\n                    <TableToolbar aria-label=\"data table toolbar\">\n                      <TableToolbarContent>\n                        <TableToolbarSearch onChange={onInputChange} />\n                      </TableToolbarContent>\n                      <Button\n                        renderIcon={Add16}\n                        onClick={() => {\n                          setOpenModal(true);\n                        }}\n                      >\n                        Add Lab\n                    </Button>\n                    </TableToolbar>\n                    <Table>\n                      <TableHead>\n                        <TableRow>\n                          {headers.map((header) => (\n                            <TableHeader>{header.header}</TableHeader>\n                          ))}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {rows.map((row) => (\n                          <TableRow>\n                            {row.cells.map((cell) => (\n                              <TableCell key={cell.id}>\n                                {cell.value === row.cells[2].value\n                                  ? cell.value\n                                    ? \"Disabled\"\n                                    : \"Enabled\"\n                                  : null}\n                                {cell.value === row.cells[4].value ? (\n                                  <span>\n                                    <Button\n                                      kind=\"ghost\"\n                                      size=\"small\"\n                                      hasIconOnly\n                                      renderIcon={Edit16}\n                                      iconDescription=\"Edit\"\n                                      onClick={() => {\n                                        openEditLab(row.cells[1].value)\n                                      }}\n                                    />\n                                    <Button\n                                      kind=\"ghost\"\n                                      size=\"small\"\n                                      hasIconOnly\n                                      renderIcon={Delete16}\n                                      iconDescription=\"Delete\"\n                                      onClick={() => {\n                                        deleteLab(row.cells[1].value);\n                                      }}\n                                    />\n                                  </span>\n                                ) : (\n                                    cell.value\n                                  )}\n                              </TableCell>\n                            ))}\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                )}\n              />\n            ) :\n            (\n              <DataTableSkeleton showHeader={false} />\n            )\n        }\n\n      </div>\n    </div>\n  );\n}\n\nexport default LabsPage;\n","import React, { useState, useEffect } from 'react';\nimport apiClient from \"../api-client\";\n\nimport {\n  //Link,\n  Tile, DataTable, Button,\n  TextInput, Dropdown, Modal, DataTableSkeleton\n} from 'carbon-components-react';\nimport AppHeader from \"../components/layout/AppHeader\";\n\nimport { Delete16, Edit16, Add16 } from '@carbon/icons-react';\n\nconst {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableHeader,\n  TableRow,\n  TableToolbar,\n  //TableToolbarAction,\n  TableToolbarContent,\n  TableToolbarSearch,\n  //TableToolbarMenu,\n} = DataTable;\n\nfunction CoursesPage() {\n  const [didMount, setDidMount] = useState(false)\n  const [courses, setCourses] = useState([]);\n  const [coursesLoaded, setCoursesLoaded] = useState(false)\n  const [openModal, setOpenModal] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n\n  /// Form props\n\n  const [formTitle, setFormTitle] = useState('Add');\n  const [fromCourseName, setFormCourseName] = useState('');\n  const [formCourseLang, setFormCourseLang] = useState('');\n  const [oldCourseName, setOldCourseName] = useState('');\n\n\n  const createCoursesObjects = labs_array => {\n    let courses_objects = [];\n\n    labs_array.forEach((lab, index, _arr) => {\n      lab.id = `${index}`;\n      courses_objects.push(lab);\n    });\n\n    setCourses(courses_objects);\n  };\n\n  useEffect(() => {\n    if (didMount) {\n      setCoursesLoaded(true)\n    }\n  // eslint-disable-next-line\n  }, [courses])\n\n  useEffect(() => {\n    setDidMount(true)\n    apiClient.getCourses(true).then(res => {\n      createCoursesObjects(res.data.courses);\n    });\n  }, []);\n\n  const addCourse = () => {\n    let newCourse = {\n      \"name\": fromCourseName,\n      \"variant\": formCourseLang,\n      \"labs\": []\n    };\n\n    apiClient.addCourse(newCourse).then(rest => {\n      setFormTitle('Add');\n      setFormCourseName('');\n      apiClient.getCourses(true).then(res => {\n        createCoursesObjects(res.data.courses);\n      });\n    });\n  };\n\n  const editCourse = () => {\n    apiClient.getCourseEdit(oldCourseName).then(res => {\n\n      let course = res.data;\n      let temp = {};\n\n      temp.name = fromCourseName;\n      temp.type = course.type;\n      temp.labs = course.labs;\n      temp.variant = formCourseLang;\n\n      apiClient.updateCourse(temp, oldCourseName).then(_res => {\n        apiClient.getCourses(true).then(res => {\n          createCoursesObjects(res.data.courses);\n\n          setFormTitle('Add');\n          setFormCourseName('');\n        });\n      });\n    });\n  };\n\n  const deleteCourse = (courseName) => {\n    apiClient.deleteCourse(courseName).then(_res => {\n      apiClient.getCourses(true).then(res => {\n        createCoursesObjects(res.data.courses);\n\n        setFormTitle('Add');\n        setFormCourseName('');\n      });\n    });\n  };\n\n\n  return (\n    <div>\n      <AppHeader />\n      <Modal\n        hasForm\n        open={openModal}\n        onRequestClose={() => {\n          setOpenModal(false);\n          setFormTitle('Add');\n          setFormCourseName('');\n        }}\n        primaryButtonText='Save'\n        secondaryButtonText='Close'\n        onRequestSubmit={() => {\n          if (isEdit) {\n            editCourse();\n          } else {\n            addCourse();\n          }\n\n          setOpenModal(false);\n        }}\n        size='sm'\n        modalHeading=\"Course\"\n        modalLabel={formTitle.toString()}\n      >\n        <div style={{ height: 32 }}></div>\n        <TextInput\n          disabled={isEdit}\n          helperText=\"E.G: CC451-Computer Networks\"\n          id=\"courseName\"\n          labelText=\"Name\"\n          value={fromCourseName}\n          onChange={(data) => { setFormCourseName(data.target.value); }}\n          placeholder=\"Enter course name\"\n        />\n        <div style={{ height: 24 }}></div>\n        <Dropdown\n          id=\"langDropdown\"\n          titleText=\"Select Language\"\n\n          label=\"Select\"\n          selectedItem={formCourseLang}\n          onChange={(data) => {\n            setFormCourseLang(data.selectedItem);\n          }}\n          items={['C', 'Java', 'Python']}\n        />\n        <div style={{ height: 40 }}></div>\n      </Modal>\n      <div style={{ marginLeft: 16, marginTop: 64, marginRight: 16 }}>\n        <div style={{ height: 16 }}></div>\n        <h1>Browse Courses</h1>\n        <div style={{ height: 40 }}></div>\n        <p>Data Analysis</p>\n        <div style={{ height: 8 }}></div>\n        <div style={{ width: 208 }}>\n          <Tile>\n            Total Courses\n            <h3>{courses.length}</h3>\n          </Tile>\n        </div>\n        <div style={{ height: 56 }}></div>\n        {\n          coursesLoaded ?\n            (\n              <DataTable\n                rows={courses}\n                headers={[\n                  {\n                    key: \"id\",\n                    header: \"Id\",\n                  },\n                  {\n                    key: \"name\",\n                    header: \"Name\",\n                  },\n                  {\n                    key: \"variant\",\n                    header: \"Variant\",\n                  },\n                  {\n                    key: 'actions',\n                    header: \"Actions\"\n                  }\n                ]}\n                render={({\n                  rows,\n                  headers,\n                  onInputChange,\n                }) => (\n                    <TableContainer>\n                      <TableToolbar aria-label=\"data table toolbar\">\n                        <TableToolbarContent>\n                          <TableToolbarSearch onChange={onInputChange} />\n                        </TableToolbarContent>\n                        <Button\n                          renderIcon={Add16}\n                          onClick={\n                            () => {\n                              setIsEdit(false);\n                              setFormTitle('Add');\n                              setFormCourseName('');\n                              setOpenModal(true);\n                            }}>Add Course</Button>\n                      </TableToolbar>\n                      <Table>\n                        <TableHead>\n                          <TableRow>\n                            {headers.map((header) => (\n                              <TableHeader>\n                                {header.header}\n                              </TableHeader>\n                            ))}\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {rows.map((row) => (\n                            <TableRow>\n                              {row.cells.map((cell) => (\n                                <TableCell key={cell.id}>\n                                  {\n                                    cell.value === row.cells[3].value ?\n                                      <span>\n                                        <Button kind=\"ghost\" size=\"small\" hasIconOnly renderIcon={Edit16} iconDescription=\"Edit\"\n                                          onClick={() => {\n                                            setOldCourseName(row.cells[1].value);\n                                            setFormCourseName(row.cells[1].value);\n                                            setFormCourseLang(row.cells[2].value)\n                                            setIsEdit(true);\n                                            setFormTitle('Edit');\n                                            setOpenModal(true);\n                                          }}\n                                        />\n                                        <Button kind=\"ghost\" size=\"small\" hasIconOnly renderIcon={Delete16} iconDescription=\"Delete\"\n                                          onClick={() => { deleteCourse(row.cells[1].value); }}\n                                        />\n                                      </span>\n                                      : cell.value\n                                  }\n                                </TableCell>\n                              ))}\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  )}\n              />\n            ) :\n            (\n              <DataTableSkeleton showHeader={false} />\n            )\n        }\n      </div>\n    </div>\n\n  );\n}\n\nexport default CoursesPage;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport apiClient from \"../../api-client\";\nimport ReactDiffViewer from \"react-diff-viewer\";\n\nimport './Markdown.scss';\n\nimport { Button } from 'carbon-components-react';\nimport { Add16 } from '@carbon/icons-react';\n\nexport function validateExtension(extension) {\n  const supportedTypes = [\n    \"application/zip\",\n    \"application/vnd.rar\",\n    \"application/x-7z-compressed\",\n    \"application/x-zip-compressed\",\n  ];\n  return supportedTypes.includes(extension);\n}\n\n\nfunction MarkdownPage({ match }) {\n  const courseName = match.params.course;\n  const LabName = match.params.lab;\n\n  const fileInputRef = React.createRef();\n  const [markdown, setMarkdown] = useState(\"\");\n  const [resultsReady, setResultsReady] = useState(false)\n  const [diff, setDiff] = useState([])\n  const [totalTestcases, setTotalTestcases] = useState(0)\n  const resultsContainerRef = useRef(null)\n\n  useEffect(() => {\n    apiClient.getLabMD(courseName, LabName).then(res => {\n      setMarkdown(res.data.lab_guide);\n    });\n  });\n\n  useEffect(() => {\n    if(resultsContainerRef.current && resultsReady){\n      resultsContainerRef.current.scrollIntoView()\n    }\n  }, [resultsReady])\n\n  const uploadFile = (file) => {\n    const formData = new FormData();\n\n    formData.append(\"submissions_file\", file);\n\n    apiClient\n      .uploadSubmissions(courseName, LabName, formData)\n      .then(_res => {\n        apiClient.startGrading(courseName, LabName, true)\n          .then(_res => {\n            apiClient.getDiffResults(courseName, LabName).then(res => {\n              setDiff(res.data.diff[0].failed);\n              setTotalTestcases(res.data.total_test_cases_count)\n              setResultsReady(true)\n            });\n          })\n      });\n  };\n\n  function onFileChange(event) {\n    if (\n      event.target.files[0] &&\n      validateExtension(event.target.files[0].type)\n    ) {\n      uploadFile(event.target.files[0]);\n    }\n  }\n\n  return (\n    <div className=\"content single-submission\">\n      <div style={{ height: 24 }}></div>\n      <div className=\"markdown-container\">\n        <ReactMarkdown plugins={[gfm]}>\n          {markdown}\n        </ReactMarkdown>\n      </div>\n      <div style={{ height: 32 }}></div>\n      <Button renderIcon={Add16} onClick={() => fileInputRef.current.click()}>\n        Submit your code\n      </Button>\n      <input\n        ref={fileInputRef}\n        name=\"submissions_file\"\n        type=\"file\"\n        hidden\n        onChange={onFileChange}\n        accept=\".zip,.rar,.7zip,.tar,.7z\"\n      />\n      <div style={{ height: 32 }}></div>\n      {\n        resultsReady && \n        (\n            <div ref={resultsContainerRef} className=\"results-container\">\n              <h3 className=\"results-header\">Results</h3>\n              <p className=\"results-summary\">You passed {totalTestcases - diff.length} test case{(totalTestcases - diff.length) == 1 ? \"\" : 's'} out of {totalTestcases}</p>\n              <div>\n                  {\n                      diff &&\n                      diff.map((tc) => (\n                          <div key={tc.tc_id} >\n                              <h4>Test Case {tc.tc_id}</h4>\n                              <hr></hr>\n                              <ReactDiffViewer\n                                  leftTitle=\"Expected\"\n                                  rightTitle=\"Output\"\n                                  oldValue={tc.expected}\n                                  newValue={tc.output}\n                                  useDarkTheme={true}\n                                  className=\"single-diff-container\"\n                              />\n                              <br></br>\n                          </div>\n                      ))\n\n                  }\n              </div>\n            </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default MarkdownPage;\n","import React from \"react\";\n\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Grader from \"./components/grader/Grader\";\nimport LabsPage from './pages/lab/Labs';\nimport CoursesPage from \"./pages/Courses\";\nimport MarkdownPage from \"./pages/markdown/Markdown\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path=\"/courses/:course/labs/:lab/lab_guide\" component={MarkdownPage} />\n        <Route path=\"/courses\" component={CoursesPage} />\n        <Route path=\"/labs\" component={LabsPage} />\n        <Route path=\"/grader\" component={Grader} />\n        <Redirect from=\"/\" to=\"/grader\" />\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.scss';\nimport {\n    BrowserRouter as Router,\n  } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n, document.getElementById(\"root\"));\n"],"sourceRoot":""}